{"ast":null,"code":"var _jsxFileName = \"/home/hoangnhoo/HTMT/src/components/CPU/DataPaths.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSimulatorStore } from '../../store/simulatorStore';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DataPaths = () => {\n  _s();\n  const {\n    cpu\n  } = useSimulatorStore();\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 130 430 L 180 430\",\n      className: \"data-path\",\n      \"data-path\": \"pc-to-imem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 90 400 L 90 320 L 150 320\",\n      className: \"data-path\",\n      \"data-path\": \"pc-to-adder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 210 320 L 250 320 L 250 280 L 50 280 L 50 430 L 50 430\",\n      className: \"data-path\",\n      \"data-path\": \"adder-to-pc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 300 400 L 400 400\",\n      className: \"data-path\",\n      \"data-path\": \"imem-to-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 250 510 L 250 550 L 350 550\",\n      className: \"data-path\",\n      \"data-path\": \"imem-to-registers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 500 600 L 650 600 L 650 550\",\n      className: \"data-path\",\n      \"data-path\": \"registers-to-alu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 770 525 L 900 525\",\n      className: \"data-path\",\n      \"data-path\": \"alu-to-dmem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 900 450 L 800 450 L 800 350 L 1100 350 L 1100 650 L 500 650\",\n      className: \"data-path\",\n      \"data-path\": \"dmem-to-registers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 450 500 L 450 550\",\n      className: `control-signal ${cpu.controlSignals.regWrite ? 'active' : ''}`,\n      \"data-signal\": \"reg-write\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 600 400 L 650 400 L 650 450\",\n      className: `control-signal ${cpu.controlSignals.aluSrc ? 'active' : ''}`,\n      \"data-signal\": \"alu-src\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 600 350 L 850 350 L 850 400\",\n      className: `control-signal ${cpu.controlSignals.memRead || cpu.controlSignals.memWrite ? 'active' : ''}`,\n      \"data-signal\": \"mem-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 500 300 L 750 300\",\n      className: `control-signal ${cpu.controlSignals.flagBranch || cpu.controlSignals.zeroBranch ? 'active' : ''}`,\n      \"data-signal\": \"branch-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 500 450 L 550 450 L 550 600\",\n      className: `control-signal ${cpu.controlSignals.reg2Loc ? 'active' : ''}`,\n      \"data-signal\": \"mux1-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 600 380 L 800 380 L 800 350\",\n      className: `control-signal ${cpu.controlSignals.memToReg ? 'active' : ''}`,\n      \"data-signal\": \"mux2-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 600 250 L 1100 250 L 1100 300\",\n      className: `control-signal ${cpu.controlSignals.uncondBranch ? 'active' : ''}`,\n      \"data-signal\": \"mux3-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), cpu.currentInstruction && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"90\",\n        cy: \"430\",\n        r: \"3\",\n        className: \"fill-cpu-blue animate-pulse\",\n        \"data-indicator\": \"pc-active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"710\",\n        cy: \"525\",\n        r: \"3\",\n        className: \"fill-cpu-red animate-pulse\",\n        \"data-indicator\": \"alu-active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(DataPaths, \"XgPSVOA5ZeWXf/qZjNFQy1UbFBs=\", false, function () {\n  return [useSimulatorStore];\n});\n_c = DataPaths;\nexport default DataPaths;\nvar _c;\n$RefreshReg$(_c, \"DataPaths\");","map":{"version":3,"names":["React","useSimulatorStore","jsxDEV","_jsxDEV","Fragment","_Fragment","DataPaths","_s","cpu","children","d","className","fileName","_jsxFileName","lineNumber","columnNumber","controlSignals","regWrite","aluSrc","memRead","memWrite","flagBranch","zeroBranch","reg2Loc","memToReg","uncondBranch","currentInstruction","cx","cy","r","_c","$RefreshReg$"],"sources":["/home/hoangnhoo/HTMT/src/components/CPU/DataPaths.tsx"],"sourcesContent":["import React from 'react';\nimport { useSimulatorStore } from '../../store/simulatorStore';\n\nconst DataPaths: React.FC = () => {\n  const { cpu } = useSimulatorStore();\n\n  return (\n    <g>\n      {/* Main data paths (black lines) */}\n      \n      {/* PC to Instruction Memory */}\n      <path\n        d=\"M 130 430 L 180 430\"\n        className=\"data-path\"\n        data-path=\"pc-to-imem\"\n      />\n      \n      {/* PC to PC+4 Adder */}\n      <path\n        d=\"M 90 400 L 90 320 L 150 320\"\n        className=\"data-path\"\n        data-path=\"pc-to-adder\"\n      />\n      \n      {/* PC+4 Adder to PC */}\n      <path\n        d=\"M 210 320 L 250 320 L 250 280 L 50 280 L 50 430 L 50 430\"\n        className=\"data-path\"\n        data-path=\"adder-to-pc\"\n      />\n      \n      {/* Instruction Memory to Control Unit */}\n      <path\n        d=\"M 300 400 L 400 400\"\n        className=\"data-path\"\n        data-path=\"imem-to-control\"\n      />\n      \n      {/* Instruction Memory to Register File */}\n      <path\n        d=\"M 250 510 L 250 550 L 350 550\"\n        className=\"data-path\"\n        data-path=\"imem-to-registers\"\n      />\n      \n      {/* Register File to ALU */}\n      <path\n        d=\"M 500 600 L 650 600 L 650 550\"\n        className=\"data-path\"\n        data-path=\"registers-to-alu\"\n      />\n      \n      {/* ALU to Data Memory */}\n      <path\n        d=\"M 770 525 L 900 525\"\n        className=\"data-path\"\n        data-path=\"alu-to-dmem\"\n      />\n      \n      {/* Data Memory to Register File (load) */}\n      <path\n        d=\"M 900 450 L 800 450 L 800 350 L 1100 350 L 1100 650 L 500 650\"\n        className=\"data-path\"\n        data-path=\"dmem-to-registers\"\n      />\n\n      {/* Control signals (blue lines) */}\n      \n      {/* Control Unit to Register File */}\n      <path\n        d=\"M 450 500 L 450 550\"\n        className={`control-signal ${cpu.controlSignals.regWrite ? 'active' : ''}`}\n        data-signal=\"reg-write\"\n      />\n      \n      {/* Control Unit to ALU */}\n      <path\n        d=\"M 600 400 L 650 400 L 650 450\"\n        className={`control-signal ${cpu.controlSignals.aluSrc ? 'active' : ''}`}\n        data-signal=\"alu-src\"\n      />\n      \n      {/* Control Unit to Data Memory */}\n      <path\n        d=\"M 600 350 L 850 350 L 850 400\"\n        className={`control-signal ${cpu.controlSignals.memRead || cpu.controlSignals.memWrite ? 'active' : ''}`}\n        data-signal=\"mem-control\"\n      />\n      \n      {/* Branch control */}\n      <path\n        d=\"M 500 300 L 750 300\"\n        className={`control-signal ${cpu.controlSignals.flagBranch || cpu.controlSignals.zeroBranch ? 'active' : ''}`}\n        data-signal=\"branch-control\"\n      />\n\n      {/* Multiplexer control lines */}\n      <path\n        d=\"M 500 450 L 550 450 L 550 600\"\n        className={`control-signal ${cpu.controlSignals.reg2Loc ? 'active' : ''}`}\n        data-signal=\"mux1-control\"\n      />\n      \n      <path\n        d=\"M 600 380 L 800 380 L 800 350\"\n        className={`control-signal ${cpu.controlSignals.memToReg ? 'active' : ''}`}\n        data-signal=\"mux2-control\"\n      />\n      \n      <path\n        d=\"M 600 250 L 1100 250 L 1100 300\"\n        className={`control-signal ${cpu.controlSignals.uncondBranch ? 'active' : ''}`}\n        data-signal=\"mux3-control\"\n      />\n\n      {/* Data flow indicators */}\n      {cpu.currentInstruction && (\n        <>\n          {/* Highlight active paths based on instruction type */}\n          <circle\n            cx=\"90\"\n            cy=\"430\"\n            r=\"3\"\n            className=\"fill-cpu-blue animate-pulse\"\n            data-indicator=\"pc-active\"\n          />\n          \n          <circle\n            cx=\"710\"\n            cy=\"525\"\n            r=\"3\"\n            className=\"fill-cpu-red animate-pulse\"\n            data-indicator=\"alu-active\"\n          />\n        </>\n      )}\n    </g>\n  );\n};\n\nexport default DataPaths; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}