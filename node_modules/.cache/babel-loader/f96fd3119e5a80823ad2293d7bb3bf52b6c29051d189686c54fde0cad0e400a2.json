{"ast":null,"code":"import{gsap}from'gsap';export class CPUAnimationController{constructor(){this.timeline=void 0;this.timeline=gsap.timeline();}// Animate data flow between components\nanimateDataFlow(animation){return new Promise(resolve=>{const{from,to,data,config}=animation;// Create a visual data element\nconst dataElement=this.createDataElement(data);// Position at source\nconst fromElement=document.querySelector(\"[data-component=\\\"\".concat(from,\"\\\"]\"));const toElement=document.querySelector(\"[data-component=\\\"\".concat(to,\"\\\"]\"));if(!fromElement||!toElement){resolve();return;}const fromRect=fromElement.getBoundingClientRect();const toRect=toElement.getBoundingClientRect();gsap.set(dataElement,{x:fromRect.left+fromRect.width/2,y:fromRect.top+fromRect.height/2,opacity:1});// Animate to destination\ngsap.to(dataElement,{x:toRect.left+toRect.width/2,y:toRect.top+toRect.height/2,duration:config.duration,ease:config.ease,delay:config.delay||0,onComplete:()=>{this.removeDataElement(dataElement);resolve();}});});}// Highlight active component\nhighlightComponent(componentId){let duration=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0.5;const element=document.querySelector(\"[data-component=\\\"\".concat(componentId,\"\\\"]\"));if(!element)return;gsap.to(element,{scale:1.05,boxShadow:'0 0 20px rgba(59, 130, 246, 0.5)',duration:duration,yoyo:true,repeat:1});}// Animate control signal activation\nactivateControlSignal(signalId){const element=document.querySelector(\"[data-signal=\\\"\".concat(signalId,\"\\\"]\"));if(!element)return;gsap.fromTo(element,{opacity:0.3},{opacity:1,duration:0.3,repeat:3,yoyo:true});}// Animate register value change\nanimateRegisterChange(registerIndex,newValue){const element=document.querySelector(\"[data-register=\\\"\".concat(registerIndex,\"\\\"]\"));if(!element)return;// Flash animation for value change\ngsap.fromTo(element,{backgroundColor:'#FEF3C7'},{backgroundColor:'#FFFFFF',duration:1,ease:'power2.out'});// Update the value with typewriter effect\nthis.animateValueChange(element,newValue);}// Animate flag changes\nanimateFlags(flags){Object.entries(flags).forEach(_ref=>{let[flag,value]=_ref;const element=document.querySelector(\"[data-flag=\\\"\".concat(flag,\"\\\"]\"));if(!element)return;gsap.to(element,{color:value?'#10B981':'#6B7280',scale:value?1.1:1,duration:0.3});});}// Create visual data element for animations\ncreateDataElement(data){const element=document.createElement('div');element.className='absolute z-50 bg-cpu-blue text-white px-2 py-1 rounded text-xs font-mono pointer-events-none';element.textContent=\"0x\".concat(data.toString(16).toUpperCase().padStart(8,'0'));document.body.appendChild(element);return element;}// Remove data element after animation\nremoveDataElement(element){gsap.to(element,{opacity:0,scale:0.8,duration:0.2,onComplete:()=>{element.remove();}});}// Animate value change with typewriter effect\nanimateValueChange(element,newValue){const hexValue=\"0x\".concat(newValue.toString(16).toUpperCase().padStart(8,'0'));let currentText='';gsap.to({},{duration:0.5,onUpdate:function(){const progress=this.progress();const targetLength=Math.floor(hexValue.length*progress);currentText=hexValue.substring(0,targetLength);element.textContent=currentText;}});}// Clear all animations\nclear(){this.timeline.clear();gsap.killTweensOf('*');}// Pause all animations\npause(){this.timeline.pause();}// Resume all animations\nresume(){this.timeline.resume();}// Set animation speed\nsetSpeed(speed){gsap.globalTimeline.timeScale(speed);}}// Singleton instance\nexport const animationController=new CPUAnimationController();","map":{"version":3,"names":["gsap","CPUAnimationController","constructor","timeline","animateDataFlow","animation","Promise","resolve","from","to","data","config","dataElement","createDataElement","fromElement","document","querySelector","concat","toElement","fromRect","getBoundingClientRect","toRect","set","x","left","width","y","top","height","opacity","duration","ease","delay","onComplete","removeDataElement","highlightComponent","componentId","arguments","length","undefined","element","scale","boxShadow","yoyo","repeat","activateControlSignal","signalId","fromTo","animateRegisterChange","registerIndex","newValue","backgroundColor","animateValueChange","animateFlags","flags","Object","entries","forEach","_ref","flag","value","color","createElement","className","textContent","toString","toUpperCase","padStart","body","appendChild","remove","hexValue","currentText","onUpdate","progress","targetLength","Math","floor","substring","clear","killTweensOf","pause","resume","setSpeed","speed","globalTimeline","timeScale","animationController"],"sources":["/home/hoangnhoo/HTMT/src/utils/animations.ts"],"sourcesContent":["import { gsap } from 'gsap';\nimport { DataFlowAnimation } from '../types';\n\nexport class CPUAnimationController {\n  private timeline: gsap.core.Timeline;\n  \n  constructor() {\n    this.timeline = gsap.timeline();\n  }\n\n  // Animate data flow between components\n  animateDataFlow(animation: DataFlowAnimation): Promise<void> {\n    return new Promise((resolve) => {\n      const { from, to, data, config } = animation;\n      \n      // Create a visual data element\n      const dataElement = this.createDataElement(data);\n      \n      // Position at source\n      const fromElement = document.querySelector(`[data-component=\"${from}\"]`);\n      const toElement = document.querySelector(`[data-component=\"${to}\"]`);\n      \n      if (!fromElement || !toElement) {\n        resolve();\n        return;\n      }\n\n      const fromRect = fromElement.getBoundingClientRect();\n      const toRect = toElement.getBoundingClientRect();\n\n      gsap.set(dataElement, {\n        x: fromRect.left + fromRect.width / 2,\n        y: fromRect.top + fromRect.height / 2,\n        opacity: 1,\n      });\n\n      // Animate to destination\n      gsap.to(dataElement, {\n        x: toRect.left + toRect.width / 2,\n        y: toRect.top + toRect.height / 2,\n        duration: config.duration,\n        ease: config.ease,\n        delay: config.delay || 0,\n        onComplete: () => {\n          this.removeDataElement(dataElement);\n          resolve();\n        },\n      });\n    });\n  }\n\n  // Highlight active component\n  highlightComponent(componentId: string, duration: number = 0.5): void {\n    const element = document.querySelector(`[data-component=\"${componentId}\"]`);\n    if (!element) return;\n\n    gsap.to(element, {\n      scale: 1.05,\n      boxShadow: '0 0 20px rgba(59, 130, 246, 0.5)',\n      duration: duration,\n      yoyo: true,\n      repeat: 1,\n    });\n  }\n\n  // Animate control signal activation\n  activateControlSignal(signalId: string): void {\n    const element = document.querySelector(`[data-signal=\"${signalId}\"]`);\n    if (!element) return;\n\n    gsap.fromTo(element, \n      { opacity: 0.3 },\n      { \n        opacity: 1, \n        duration: 0.3,\n        repeat: 3,\n        yoyo: true,\n      }\n    );\n  }\n\n  // Animate register value change\n  animateRegisterChange(registerIndex: number, newValue: number): void {\n    const element = document.querySelector(`[data-register=\"${registerIndex}\"]`);\n    if (!element) return;\n\n    // Flash animation for value change\n    gsap.fromTo(element,\n      { backgroundColor: '#FEF3C7' },\n      {\n        backgroundColor: '#FFFFFF',\n        duration: 1,\n        ease: 'power2.out',\n      }\n    );\n\n    // Update the value with typewriter effect\n    this.animateValueChange(element, newValue);\n  }\n\n  // Animate flag changes\n  animateFlags(flags: { [key: string]: boolean }): void {\n    Object.entries(flags).forEach(([flag, value]) => {\n      const element = document.querySelector(`[data-flag=\"${flag}\"]`);\n      if (!element) return;\n\n      gsap.to(element, {\n        color: value ? '#10B981' : '#6B7280',\n        scale: value ? 1.1 : 1,\n        duration: 0.3,\n      });\n    });\n  }\n\n  // Create visual data element for animations\n  private createDataElement(data: number): HTMLElement {\n    const element = document.createElement('div');\n    element.className = 'absolute z-50 bg-cpu-blue text-white px-2 py-1 rounded text-xs font-mono pointer-events-none';\n    element.textContent = `0x${data.toString(16).toUpperCase().padStart(8, '0')}`;\n    document.body.appendChild(element);\n    return element;\n  }\n\n  // Remove data element after animation\n  private removeDataElement(element: HTMLElement): void {\n    gsap.to(element, {\n      opacity: 0,\n      scale: 0.8,\n      duration: 0.2,\n      onComplete: () => {\n        element.remove();\n      },\n    });\n  }\n\n  // Animate value change with typewriter effect\n  private animateValueChange(element: Element, newValue: number): void {\n    const hexValue = `0x${newValue.toString(16).toUpperCase().padStart(8, '0')}`;\n    let currentText = '';\n    \n    gsap.to({}, {\n      duration: 0.5,\n      onUpdate: function() {\n        const progress = this.progress();\n        const targetLength = Math.floor(hexValue.length * progress);\n        currentText = hexValue.substring(0, targetLength);\n        element.textContent = currentText;\n      },\n    });\n  }\n\n  // Clear all animations\n  clear(): void {\n    this.timeline.clear();\n    gsap.killTweensOf('*');\n  }\n\n  // Pause all animations\n  pause(): void {\n    this.timeline.pause();\n  }\n\n  // Resume all animations\n  resume(): void {\n    this.timeline.resume();\n  }\n\n  // Set animation speed\n  setSpeed(speed: number): void {\n    gsap.globalTimeline.timeScale(speed);\n  }\n}\n\n// Singleton instance\nexport const animationController = new CPUAnimationController(); "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}