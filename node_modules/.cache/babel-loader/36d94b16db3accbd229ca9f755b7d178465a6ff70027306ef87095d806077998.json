{"ast":null,"code":"var _jsxFileName = \"/home/hoangnhoo/HTMT/src/components/CPU/InstructionMemory.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSimulatorStore } from '../../store/simulatorStore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstructionMemory = () => {\n  _s();\n  const {\n    cpu\n  } = useSimulatorStore();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cpu-component h-full flex flex-col bg-cpu-yellow bg-opacity-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-xs font-bold text-cpu-yellow mb-2 text-center\",\n      children: \"Instruction Memory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 overflow-y-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-1\",\n        children: [cpu.instructionMemory.slice(0, 8).map((instruction, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `text-xs p-1 rounded border ${index === cpu.currentInstructionIndex ? 'bg-cpu-yellow bg-opacity-30 border-cpu-yellow' : 'bg-white border-gray-200'}`,\n          \"data-instruction\": index,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-mono text-xs\",\n            children: instruction.address.toString(16).toUpperCase().padStart(8, '0')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-mono text-xs text-gray-600\",\n            children: instruction.assembly\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 13\n        }, this)), cpu.instructionMemory.length > 8 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-xs text-gray-500 text-center\",\n          children: [\"... \", cpu.instructionMemory.length - 8, \" more\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2 text-xs text-gray-600 text-center\",\n      children: \"Read Address: PC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(InstructionMemory, \"XgPSVOA5ZeWXf/qZjNFQy1UbFBs=\", false, function () {\n  return [useSimulatorStore];\n});\n_c = InstructionMemory;\nexport default InstructionMemory;\nvar _c;\n$RefreshReg$(_c, \"InstructionMemory\");","map":{"version":3,"names":["React","useSimulatorStore","jsxDEV","_jsxDEV","InstructionMemory","_s","cpu","className","children","fileName","_jsxFileName","lineNumber","columnNumber","instructionMemory","slice","map","instruction","index","currentInstructionIndex","address","toString","toUpperCase","padStart","assembly","length","_c","$RefreshReg$"],"sources":["/home/hoangnhoo/HTMT/src/components/CPU/InstructionMemory.tsx"],"sourcesContent":["import React from 'react';\nimport { useSimulatorStore } from '../../store/simulatorStore';\n\nconst InstructionMemory: React.FC = () => {\n  const { cpu } = useSimulatorStore();\n\n  return (\n    <div className=\"cpu-component h-full flex flex-col bg-cpu-yellow bg-opacity-10\">\n      <div className=\"text-xs font-bold text-cpu-yellow mb-2 text-center\">\n        Instruction Memory\n      </div>\n      \n      <div className=\"flex-1 overflow-y-auto\">\n        <div className=\"space-y-1\">\n          {cpu.instructionMemory.slice(0, 8).map((instruction, index) => (\n            <div \n              key={index}\n              className={`text-xs p-1 rounded border ${\n                index === cpu.currentInstructionIndex \n                  ? 'bg-cpu-yellow bg-opacity-30 border-cpu-yellow' \n                  : 'bg-white border-gray-200'\n              }`}\n              data-instruction={index}\n            >\n              <div className=\"font-mono text-xs\">\n                {instruction.address.toString(16).toUpperCase().padStart(8, '0')}\n              </div>\n              <div className=\"font-mono text-xs text-gray-600\">\n                {instruction.assembly}\n              </div>\n            </div>\n          ))}\n          {cpu.instructionMemory.length > 8 && (\n            <div className=\"text-xs text-gray-500 text-center\">\n              ... {cpu.instructionMemory.length - 8} more\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Read address input */}\n      <div className=\"mt-2 text-xs text-gray-600 text-center\">\n        Read Address: PC\n      </div>\n    </div>\n  );\n};\n\nexport default InstructionMemory; "],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,QAAQ,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/D,MAAMC,iBAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC,MAAM;IAAEC;EAAI,CAAC,GAAGL,iBAAiB,CAAC,CAAC;EAEnC,oBACEE,OAAA;IAAKI,SAAS,EAAC,gEAAgE;IAAAC,QAAA,gBAC7EL,OAAA;MAAKI,SAAS,EAAC,oDAAoD;MAAAC,QAAA,EAAC;IAEpE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAENT,OAAA;MAAKI,SAAS,EAAC,wBAAwB;MAAAC,QAAA,eACrCL,OAAA;QAAKI,SAAS,EAAC,WAAW;QAAAC,QAAA,GACvBF,GAAG,CAACO,iBAAiB,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,WAAW,EAAEC,KAAK,kBACxDd,OAAA;UAEEI,SAAS,EAAE,8BACTU,KAAK,KAAKX,GAAG,CAACY,uBAAuB,GACjC,+CAA+C,GAC/C,0BAA0B,EAC7B;UACH,oBAAkBD,KAAM;UAAAT,QAAA,gBAExBL,OAAA;YAAKI,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAC/BQ,WAAW,CAACG,OAAO,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG;UAAC;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7D,CAAC,eACNT,OAAA;YAAKI,SAAS,EAAC,iCAAiC;YAAAC,QAAA,EAC7CQ,WAAW,CAACO;UAAQ;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC;QAAA,GAbDK,KAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcP,CACN,CAAC,EACDN,GAAG,CAACO,iBAAiB,CAACW,MAAM,GAAG,CAAC,iBAC/BrB,OAAA;UAAKI,SAAS,EAAC,mCAAmC;UAAAC,QAAA,GAAC,MAC7C,EAACF,GAAG,CAACO,iBAAiB,CAACW,MAAM,GAAG,CAAC,EAAC,OACxC;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGNT,OAAA;MAAKI,SAAS,EAAC,wCAAwC;MAAAC,QAAA,EAAC;IAExD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACP,EAAA,CA3CID,iBAA2B;EAAA,QACfH,iBAAiB;AAAA;AAAAwB,EAAA,GAD7BrB,iBAA2B;AA6CjC,eAAeA,iBAAiB;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}