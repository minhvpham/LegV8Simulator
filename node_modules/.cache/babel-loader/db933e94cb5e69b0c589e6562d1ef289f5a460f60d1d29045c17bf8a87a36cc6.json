{"ast":null,"code":"import { produce } from 'immer';\nconst immerImpl = initializer => (set, get, store) => {\n  store.setState = function (updater, replace) {\n    const nextState = typeof updater === \"function\" ? produce(updater) : updater;\n    for (var _len = arguments.length, a = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      a[_key - 2] = arguments[_key];\n    }\n    return set(nextState, replace, ...a);\n  };\n  return initializer(store.setState, get, store);\n};\nconst immer = immerImpl;\nexport { immer };","map":{"version":3,"names":["produce","immerImpl","initializer","set","get","store","setState","updater","replace","nextState","_len","arguments","length","a","Array","_key","immer"],"sources":["/home/hoangnhoo/HTMT/node_modules/zustand/esm/middleware/immer.mjs"],"sourcesContent":["import { produce } from 'immer';\n\nconst immerImpl = (initializer) => (set, get, store) => {\n  store.setState = (updater, replace, ...a) => {\n    const nextState = typeof updater === \"function\" ? produce(updater) : updater;\n    return set(nextState, replace, ...a);\n  };\n  return initializer(store.setState, get, store);\n};\nconst immer = immerImpl;\n\nexport { immer };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAE/B,MAAMC,SAAS,GAAIC,WAAW,IAAK,CAACC,GAAG,EAAEC,GAAG,EAAEC,KAAK,KAAK;EACtDA,KAAK,CAACC,QAAQ,GAAG,UAACC,OAAO,EAAEC,OAAO,EAAW;IAC3C,MAAMC,SAAS,GAAG,OAAOF,OAAO,KAAK,UAAU,GAAGP,OAAO,CAACO,OAAO,CAAC,GAAGA,OAAO;IAAC,SAAAG,IAAA,GAAAC,SAAA,CAAAC,MAAA,EADxCC,CAAC,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAADF,CAAC,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;IAAA;IAEtC,OAAOZ,GAAG,CAACM,SAAS,EAAED,OAAO,EAAE,GAAGK,CAAC,CAAC;EACtC,CAAC;EACD,OAAOX,WAAW,CAACG,KAAK,CAACC,QAAQ,EAAEF,GAAG,EAAEC,KAAK,CAAC;AAChD,CAAC;AACD,MAAMW,KAAK,GAAGf,SAAS;AAEvB,SAASe,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}