{"ast":null,"code":"var _jsxFileName = \"/home/hoangnhoo/HTMT/src/components/CPU/DataPaths.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useSimulatorStore } from '../../store/simulatorStore';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DataPaths = () => {\n  _s();\n  const {\n    cpu\n  } = useSimulatorStore();\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    children: [/*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 120 390 L 160 390\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"pc-to-imem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 80 350 L 80 305 L 160 305\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"pc-to-adder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 230 305 L 1200 305 L 1200 340 L 1240 340\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"adder-to-pc-mux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 1200 340 L 30 340 L 30 390 L 40 390\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"mux-to-pc\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 300 390 L 350 390 L 350 250\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"imem-to-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 250 450 L 250 480 L 350 480\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"inst-to-registers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 530 520 L 700 520\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"reg-read1-to-alu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 530 560 L 560 560\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"reg-read2-to-mux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 600 560 L 700 560\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"mux-to-alu\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 450 730 L 580 730 L 580 600\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"signext-to-mux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 820 500 L 900 500 L 900 460 L 940 460\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"alu-to-mux2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 940 460 L 1000 460\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"mux2-to-dmem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 1160 480 L 1200 480 L 1200 540 L 1240 540\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"dmem-to-wb-mux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 820 480 L 1220 480 L 1220 520 L 1240 520\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"alu-to-wb-mux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 1200 540 L 1280 540 L 1280 650 L 350 650 L 350 600\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"wb-mux-to-registers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 450 720 L 650 720 L 650 375 L 730 375\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"signext-to-shift\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 730 375 L 850 375 L 850 305\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"shift-to-branch-adder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 230 305 L 850 305\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"pc4-to-branch-adder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 920 305 L 1220 305 L 1220 320 L 1240 320\",\n      className: \"data-path\",\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-path\": \"branch-adder-to-pc-mux\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 490 350 L 490 450\",\n      className: `control-signal ${cpu.controlSignals.regWrite ? 'active' : ''}`,\n      stroke: \"#3B82F6\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-signal\": \"reg-write\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 550 350 L 550 400 L 580 400 L 580 520\",\n      className: `control-signal ${cpu.controlSignals.aluSrc ? 'active' : ''}`,\n      stroke: \"#3B82F6\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-signal\": \"alu-src\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 600 350 L 600 380 L 1080 380 L 1080 400\",\n      className: `control-signal ${cpu.controlSignals.memRead || cpu.controlSignals.memWrite ? 'active' : ''}`,\n      stroke: \"#3B82F6\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-signal\": \"mem-control\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 580 350 L 580 370 L 1220 370 L 1220 500\",\n      className: `control-signal ${cpu.controlSignals.memToReg ? 'active' : ''}`,\n      stroke: \"#3B82F6\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-signal\": \"mem-to-reg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 520 350 L 520 320 L 1220 320\",\n      className: `control-signal ${cpu.controlSignals.uncondBranch || cpu.controlSignals.flagBranch ? 'active' : ''}`,\n      stroke: \"#3B82F6\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-signal\": \"pc-src\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 560 350 L 560 620 L 720 620\",\n      className: \"control-signal\",\n      stroke: \"#3B82F6\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-signal\": \"alu-op\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n      d: \"M 760 420 L 760 300 L 1210 300\",\n      className: `control-signal ${cpu.flags.zero ? 'active' : ''}`,\n      stroke: \"#3B82F6\",\n      strokeWidth: \"2\",\n      fill: \"none\",\n      \"data-signal\": \"zero-flag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), cpu.currentInstruction && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"80\",\n        cy: \"390\",\n        r: \"4\",\n        className: \"fill-cpu-blue animate-pulse\",\n        \"data-indicator\": \"pc-active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"760\",\n        cy: \"500\",\n        r: \"4\",\n        className: \"fill-cpu-red animate-pulse\",\n        \"data-indicator\": \"alu-active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: \"230\",\n        cy: \"390\",\n        r: \"4\",\n        className: \"fill-cpu-yellow animate-pulse\",\n        \"data-indicator\": \"imem-active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"230\",\n      cy: \"305\",\n      r: \"2\",\n      fill: \"#000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"580\",\n      cy: \"560\",\n      r: \"2\",\n      fill: \"#000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"920\",\n      cy: \"460\",\n      r: \"2\",\n      fill: \"#000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"1220\",\n      cy: \"540\",\n      r: \"2\",\n      fill: \"#000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"350\",\n      cy: \"390\",\n      r: \"2\",\n      fill: \"#000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"760\",\n      cy: \"500\",\n      r: \"2\",\n      fill: \"#000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n_s(DataPaths, \"XgPSVOA5ZeWXf/qZjNFQy1UbFBs=\", false, function () {\n  return [useSimulatorStore];\n});\n_c = DataPaths;\nexport default DataPaths;\nvar _c;\n$RefreshReg$(_c, \"DataPaths\");","map":{"version":3,"names":["React","useSimulatorStore","jsxDEV","_jsxDEV","Fragment","_Fragment","DataPaths","_s","cpu","children","d","className","stroke","strokeWidth","fill","fileName","_jsxFileName","lineNumber","columnNumber","controlSignals","regWrite","aluSrc","memRead","memWrite","memToReg","uncondBranch","flagBranch","flags","zero","currentInstruction","cx","cy","r","_c","$RefreshReg$"],"sources":["/home/hoangnhoo/HTMT/src/components/CPU/DataPaths.tsx"],"sourcesContent":["import React from 'react';\nimport { useSimulatorStore } from '../../store/simulatorStore';\n\nconst DataPaths: React.FC = () => {\n  const { cpu } = useSimulatorStore();\n\n  return (\n    <g>\n      {/* Main data paths (black lines) */}\n      \n      {/* PC to Instruction Memory */}\n      <path\n        d=\"M 120 390 L 160 390\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"pc-to-imem\"\n      />\n      \n      {/* PC to PC+4 Adder */}\n      <path\n        d=\"M 80 350 L 80 305 L 160 305\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"pc-to-adder\"\n      />\n      \n      {/* PC+4 Adder back to PC (through MUX) */}\n      <path\n        d=\"M 230 305 L 1200 305 L 1200 340 L 1240 340\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"adder-to-pc-mux\"\n      />\n      \n      {/* MUX back to PC */}\n      <path\n        d=\"M 1200 340 L 30 340 L 30 390 L 40 390\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"mux-to-pc\"\n      />\n      \n      {/* Instruction Memory to Control Unit */}\n      <path\n        d=\"M 300 390 L 350 390 L 350 250\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"imem-to-control\"\n      />\n      \n      {/* Instruction fields to Register File */}\n      <path\n        d=\"M 250 450 L 250 480 L 350 480\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"inst-to-registers\"\n      />\n      \n      {/* Register File Read Data 1 to ALU */}\n      <path\n        d=\"M 530 520 L 700 520\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"reg-read1-to-alu\"\n      />\n      \n      {/* Register File Read Data 2 to MUX */}\n      <path\n        d=\"M 530 560 L 560 560\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"reg-read2-to-mux\"\n      />\n      \n      {/* MUX to ALU (second input) */}\n      <path\n        d=\"M 600 560 L 700 560\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"mux-to-alu\"\n      />\n      \n      {/* Sign Extend to MUX */}\n      <path\n        d=\"M 450 730 L 580 730 L 580 600\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"signext-to-mux\"\n      />\n      \n      {/* ALU Result to Data Memory */}\n      <path\n        d=\"M 820 500 L 900 500 L 900 460 L 940 460\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"alu-to-mux2\"\n      />\n      \n      {/* MUX2 to Data Memory */}\n      <path\n        d=\"M 940 460 L 1000 460\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"mux2-to-dmem\"\n      />\n      \n      {/* Data Memory Read Data to Write Back MUX */}\n      <path\n        d=\"M 1160 480 L 1200 480 L 1200 540 L 1240 540\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"dmem-to-wb-mux\"\n      />\n      \n      {/* ALU Result to Write Back MUX */}\n      <path\n        d=\"M 820 480 L 1220 480 L 1220 520 L 1240 520\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"alu-to-wb-mux\"\n      />\n      \n      {/* Write Back MUX to Register File */}\n      <path\n        d=\"M 1200 540 L 1280 540 L 1280 650 L 350 650 L 350 600\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"wb-mux-to-registers\"\n      />\n      \n      {/* Branch Address Calculation */}\n      <path\n        d=\"M 450 720 L 650 720 L 650 375 L 730 375\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"signext-to-shift\"\n      />\n      \n      {/* Shift Left 2 to Branch Adder */}\n      <path\n        d=\"M 730 375 L 850 375 L 850 305\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"shift-to-branch-adder\"\n      />\n      \n      {/* PC+4 to Branch Adder */}\n      <path\n        d=\"M 230 305 L 850 305\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"pc4-to-branch-adder\"\n      />\n      \n      {/* Branch Adder to PC MUX */}\n      <path\n        d=\"M 920 305 L 1220 305 L 1220 320 L 1240 320\"\n        className=\"data-path\"\n        stroke=\"#000\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-path=\"branch-adder-to-pc-mux\"\n      />\n\n      {/* Control signals (blue lines) */}\n      \n      {/* Control Unit to Register File (RegWrite) */}\n      <path\n        d=\"M 490 350 L 490 450\"\n        className={`control-signal ${cpu.controlSignals.regWrite ? 'active' : ''}`}\n        stroke=\"#3B82F6\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-signal=\"reg-write\"\n      />\n      \n      {/* Control Unit to ALU Source MUX */}\n      <path\n        d=\"M 550 350 L 550 400 L 580 400 L 580 520\"\n        className={`control-signal ${cpu.controlSignals.aluSrc ? 'active' : ''}`}\n        stroke=\"#3B82F6\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-signal=\"alu-src\"\n      />\n      \n      {/* Control Unit to Data Memory */}\n      <path\n        d=\"M 600 350 L 600 380 L 1080 380 L 1080 400\"\n        className={`control-signal ${cpu.controlSignals.memRead || cpu.controlSignals.memWrite ? 'active' : ''}`}\n        stroke=\"#3B82F6\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-signal=\"mem-control\"\n      />\n      \n      {/* Control Unit to Write Back MUX */}\n      <path\n        d=\"M 580 350 L 580 370 L 1220 370 L 1220 500\"\n        className={`control-signal ${cpu.controlSignals.memToReg ? 'active' : ''}`}\n        stroke=\"#3B82F6\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-signal=\"mem-to-reg\"\n      />\n      \n      {/* Control Unit to PC Source MUX */}\n      <path\n        d=\"M 520 350 L 520 320 L 1220 320\"\n        className={`control-signal ${cpu.controlSignals.uncondBranch || cpu.controlSignals.flagBranch ? 'active' : ''}`}\n        stroke=\"#3B82F6\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-signal=\"pc-src\"\n      />\n      \n      {/* Control Unit to ALU Control */}\n      <path\n        d=\"M 560 350 L 560 620 L 720 620\"\n        className=\"control-signal\"\n        stroke=\"#3B82F6\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-signal=\"alu-op\"\n      />\n      \n      {/* ALU Zero flag to PC Control */}\n      <path\n        d=\"M 760 420 L 760 300 L 1210 300\"\n        className={`control-signal ${cpu.flags.zero ? 'active' : ''}`}\n        stroke=\"#3B82F6\"\n        strokeWidth=\"2\"\n        fill=\"none\"\n        data-signal=\"zero-flag\"\n      />\n\n      {/* Data flow indicators */}\n      {cpu.currentInstruction && (\n        <>\n          {/* Active PC indicator */}\n          <circle\n            cx=\"80\"\n            cy=\"390\"\n            r=\"4\"\n            className=\"fill-cpu-blue animate-pulse\"\n            data-indicator=\"pc-active\"\n          />\n          \n          {/* Active ALU indicator */}\n          <circle\n            cx=\"760\"\n            cy=\"500\"\n            r=\"4\"\n            className=\"fill-cpu-red animate-pulse\"\n            data-indicator=\"alu-active\"\n          />\n          \n          {/* Active instruction memory indicator */}\n          <circle\n            cx=\"230\"\n            cy=\"390\"\n            r=\"4\"\n            className=\"fill-cpu-yellow animate-pulse\"\n            data-indicator=\"imem-active\"\n          />\n        </>\n      )}\n      \n      {/* Connection dots for better visibility */}\n      <circle cx=\"230\" cy=\"305\" r=\"2\" fill=\"#000\" />\n      <circle cx=\"580\" cy=\"560\" r=\"2\" fill=\"#000\" />\n      <circle cx=\"920\" cy=\"460\" r=\"2\" fill=\"#000\" />\n      <circle cx=\"1220\" cy=\"540\" r=\"2\" fill=\"#000\" />\n      <circle cx=\"350\" cy=\"390\" r=\"2\" fill=\"#000\" />\n      <circle cx=\"760\" cy=\"500\" r=\"2\" fill=\"#000\" />\n    </g>\n  );\n};\n\nexport default DataPaths; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}